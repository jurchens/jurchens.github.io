<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[：decode 和 encode 知识总结]]></title>
    <url>%2F2018%2F12%2F03%2Fdecode_%E5%92%8C_encode_%E7%9F%A5%E8%AF%86%E6%80%BB%E7%BB%93%2F</url>
    <content type="text"><![CDATA[为解决世界各地区编码问题，引出了unicode 编码，通常我们将其他编码转换成unicode 码，使用decode 转换，比如常见的中文转换unicode, 将unicode 转换成其他编码,使用encode1.将中文转换成unicode 123456789101112131415方法1：&gt;&gt;&gt; a = u&apos;编程&apos;&gt;&gt;&gt; print a编程&gt;&gt;&gt; len(a)2&gt;&gt;&gt; 方法2：&gt;&gt;&gt; a = &apos;编程&apos;.decode(&apos;utf-8&apos;)&gt;&gt;&gt; print a编程&gt;&gt;&gt; len(a)2&gt;&gt;&gt; 将unicode 转换 其他编码 12345678910&gt;&gt;&gt; a = &apos;编程&apos;&gt;&gt;&gt; a&apos;\xe7\xbc\x96\xe7\xa8\x8b&apos;&gt;&gt;&gt; a = &apos;编程&apos;.decode(&apos;utf-8&apos;)&gt;&gt;&gt; au&apos;\u7f16\u7a0b&apos;&gt;&gt;&gt; print u&apos;\u7f16\u7a0b&apos;.encode(&apos;utf-8&apos;)编程 3.脚本使用unicode 12345678910111213141516#coding=utf-8a = &quot;中文&quot;print len(a)# 结果还是6个字符，并没有因为设置了utf-8 格式而改变[root@mail ~]# python unicode.py 6#修改代码#coding=utf-8a = &quot;中文&quot;.decode(&apos;utf-8&apos;)print len(a)#打印结果[root@mail ~]# python unicode.py 2 这里做个简单的介绍和对比]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>unicode</tag>
        <tag>decode</tag>
        <tag>python</tag>
        <tag>encode</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker 部署redash]]></title>
    <url>%2F2018%2F11%2F29%2FDocker_Deploy_redash%2F</url>
    <content type="text"><![CDATA[参考链接: https://zhuanlan.zhihu.com/p/31292944 https://blog.csdn.net/diantun00/article/details/80968604 gitbub 地址: https://github.com/getredash/redash 通过git 方式下载redash git clone git@github.com:getredash/redash.git 如果不能下载,直接登陆github,下载包，解压 wget https://github.com/getredash/redash/archive/master.zip unzip master.zip 2.进入到redash 目录 cd redash 3.编辑docker-compose.production.yml 文件,将数据目录映射出来 4.数据库初始化 1docker-compose -f docker-compose.production.yml run --rm server create_db 如果没有docker-compose ,执行下列命令安装 pip install docker-compose 5.启动容器，时间有点久，网络差的先出去旅个游，回去未必能装好 1docker-compose -f docker-compose.production.yml up 备注 如果访问宿主机的数据库服务，注意放行docker 容器IP 比如： 172.17.0.0/16 和172.18.0.0/16 ,保存，重启docker重启]]></content>
      <categories>
        <category>redash</category>
      </categories>
      <tags>
        <tag>redash</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[turnserver supervisor 的stdout log 没有时间戳问题]]></title>
    <url>%2F2018%2F11%2F27%2Fturnserver_supervisor__log_%E6%B2%A1%E6%9C%89%E6%97%B6%E9%97%B4%E6%88%B3%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%2F</url>
    <content type="text"><![CDATA[参考链接： https://github.com/Supervisor/supervisor/issues/553 1.编写turnserver 运行脚本 run-worker.sh 123#!/bin/bash WORKER_NAME=$1 bash -c &apos;turnserver -c /etc/turnserver/&quot;$WORKER_NAME&quot;.conf -v | ts &apos;&quot;&apos;&quot;&apos;[%Y-%m-%d %H:%M:%S]&apos;&quot;&apos;&quot; 如果没有ts 命令，需要安装 moreutils 包 yum install moreutils 2.配置supervisor turnserver.conf 123456789[program:turnserver]command = /etc/supervisor/conf.d/run-worker.sh &quot;turnserver&quot;user = airdroidautostart = trueautorestart = truestdout_logfile = /var/log/supervisor/turnserver.info.logstdout_logfile_maxbytes = 100MBstdout_logfile_backups = 5stderr_logfile = /var/log/supervisor/turnserver.error.log 3.日志效果 1234567891011[root@VM_32_5_centos ~]# tailf /var/log/supervisor/turnserver.info.log [2018-11-28 02:22:02] 0: IPv4. TCP listener opened on : 192.168.0.1:3478[2018-11-28 02:22:02] 0: IPv4. UDP listener opened on: 192.168.0.1:3479[2018-11-28 02:22:02] 0: IPv4. TCP listener opened on : 192.168.0.1:3479[2018-11-28 02:22:02] 0: Total General servers: 2[2018-11-28 02:22:02] 0: IO method (auth thread): epoll (with changelist)[2018-11-28 02:22:02] 0: IO method (auth thread): epoll (with changelist)[2018-11-28 02:22:02] 0: ERROR: Cannot open SQLite DB connection: &lt;/var/db/turndb&gt;, runtime error:[2018-11-28 02:22:02] unable to open database file[2018-11-28 02:22:02] (If your intention is to use an SQLite database for the TURN server, then[2018-11-28 02:22:02] check and fix, if necessary, the effective permissions of the TURN server]]></content>
      <categories>
        <category>webrtc</category>
      </categories>
      <tags>
        <tag>webrtc</tag>
        <tag>turnserver</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Install Docker CE]]></title>
    <url>%2F2018%2F11%2F26%2FInstall_Docker_CE%2F</url>
    <content type="text"><![CDATA[官网安装地址: https://docs.docker.com/install/linux/docker-ce/centos/#install-using-the-repository 1.安装依赖包 yum install -y yum-utils device-mapper-persistent-data lvm2 2.添加Docker 镜像仓库 yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo 3.启用edge 和 test 仓库 yum-config-manager --enable docker-ce-edge yum-config-manager --enable docker-ce-test 4.安装Docker CE yum install docker-ce 5.启动Docker systemctl start docker 6.设置开机启动 systemctl enable docker]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F11%2F26%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
